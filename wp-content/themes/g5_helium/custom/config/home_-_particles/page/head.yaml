atoms:
  -
    id: assets-5274
    type: assets
    title: 'Custom CSS / JS'
    attributes:
      enabled: '1'
      css:
        - { location: '', inline: ".con-container {\n    display: flex;\n    align-items: center;\n    justify-content: left;\n    padding-left: 50px;\n    height: 100vh;\n    background-image: url('http://localhost/portfolio/wp-content/uploads/2024/08/Header.png');\n    background-size: cover;\n    background-position: center;\n}\n\n.scroll-container {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n}\n\n.a-scroll-content {\n    white-space: nowrap;\n    margin: 0;\n    margin-bottom: -45px;\n    font-size: 25px;\n    opacity: 0;\n    transition: opacity 1s ease-in-out, transform 1s ease-in-out;\n}\n\n.b-scroll-content {\n    white-space: nowrap;\n    margin: 0;\n    margin-top: -30px;\n    font-size: 20px;\n    opacity: 0;\n    transition: opacity 1s ease-in-out, transform 1s ease-in-out;\n}\n\n.fade-in {\n    animation: fadeIn 1s forwards;\n}\n\n.moving-content {\n    font-size: 75px; /* Larger font size */\n    margin-left: -3px;\n    font-weight: bold; /* Bold font */\n    position: relative;\n    left: -100%;\n    opacity: 1;\n    transition: left 1s ease-in-out;\n}\n\n\n.slide-up {\n    transform: translateY(100%);\n}\n\n@keyframes fadeIn {\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes slideUp {\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n\n@keyframes slideDown {\n    to {\n        transform: translateY(100%);\n        opacity: 0;\n    }\n}\n", extra: {  }, priority: '0', name: animation }
        - { location: '', inline: "#g-navigation .g-social {\n    text-align: left;\n    line-height: 3.125;\n    margin-left: -320px;\n}", extra: {  }, priority: '0', name: 'icon links' }
        - { location: '', inline: "body {\n    margin: 0;\n}\n\n#g-intro {\n    background: #f4f5f7;\n    color: #020202;\n    padding: 1rem 0;\n}\n\n.g-home-particles.g-helium-style #g-intro {\n    padding-bottom: 4.5rem;\n}\n\n.fp-intro {\n    max-width: 100%;\n    margin: 0 auto;\n    padding: 20px;\n    text-align: center;\n    opacity: 0;\n    transform: translateY(20px);\n    transition: opacity 2s ease-out, transform 2s ease-out;\n}\n\n.g-title {\n    margin: 0;\n    font-size: 4em;\n    margin-bottom: 10px;\n    font-family: Helvetica;\n    font-weight: bold;\n}\n\n.intro-content p {\n    font-size: 1.2em;\n    line-height: 1.5;\n}\n\n.fp-intro.in-view {\n    opacity: 1;\n    transform: translateY(0);\n}\n\n.fp-intro.outro {\n    opacity: 0;\n    transform: translateY(20px);\n}\n\n@keyframes fadeInUp {\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n@keyframes fadeOutDown {\n    to {\n        opacity: 0;\n        transform: translateY(20px);\n    }\n}", extra: {  }, priority: '0', name: intro }
        - { location: '', inline: "/* Container Styles */\n#g-features {\n    height: 570px;\n}\n.exp-container {\n    position: relative;\n    padding: 20px;\n}\n\n/* Title Styles */\n.ut-title {\n    opacity: 0;\n    transform: translateY(-30px); \n    transition: opacity 1.5s ease-in-out, transform 1.5s ease-in-out;\n    will-change: opacity, transform;\n}\n\n.ut-title h1 {\n    text-align: center;\n    font-size: 4rem;\n    margin: 0;\n    padding: 0;\n    font-family: Helvetica, sans-serif; /* Font-family fallback */\n}\n\n/* Experience Styles */\n.experience {\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    padding: 20px; /* Adjusted padding */\n    margin-bottom: 20px; /* Space below */\n    opacity: 0;\n    transform: translateY(30px); \n    transition: opacity 1.5s ease-in-out, transform 1.5s ease-in-out;\n    will-change: opacity, transform;\n}\n\n/* Experience Header Styles */\n.experience-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid #ddd;\n    padding-bottom: 10px;\n    margin-bottom: 10px;\n}\n\n/* Title Styles Inside Experience */\n.title h3 {\n    margin: 0;\n    font-size: 2em;\n    font-family: Raleway, sans-serif; /* Font-family fallback */\n    font-weight: bolder;\n}\n\n.title p {\n    margin: 0;\n    color: #fff;\n    font-size: 1.2em;\n    font-family: Raleway, sans-serif; /* Font-family fallback */\n}\n\n.date p {\n    margin: 0;\n    font-style: italic;\n    color: #fff;\n    font-size: 1em;\n    margin-top: -35px; /* Adjust as needed */\n}\n\n/* Experience Details Styles */\n.experience-details ul {\n    list-style-type: disc;\n    padding-left: 20px;\n    margin: 0;\n    font-size: 1.1em;\n}\n\n.experience-details li {\n    margin-bottom: 5px;\n}\n\n/* Visibility Classes */\n.ut-title.visible {\n    opacity: 1;\n    transform: translateY(0);\n}\n\n.experience.visible {\n    opacity: 1;\n    transform: translateY(0);\n}\n\n.ut-title.hidden {\n    opacity: 0;\n    transform: translateY(-30px);\n}\n\n.experience.hidden {\n    opacity: 0;\n    transform: translateY(30px);\n}\n", extra: {  }, priority: '0', name: experience }
        - { location: '', inline: ".g-contentcubes .cube-items-wrapper {\n    background: #ffffff;\n    color: #020202;\n    border-radius: 50px;\n    overflow: hidden;\n}\n\n.g-contentcubes .cube-items-wrapper .cube-content-wrapper .item-label {\n    display: inline-block;\n    background: #020202;\n    padding: 0.35em 0.85em;\n    margin-bottom: 0.5rem;\n    font-size: 0.8125rem;\n    line-height: 1.1538;\n    font-weight: 600;\n    border-radius: 2.5rem;\n    text-align: center;\n    color: #fff;\n}\n\n.g-contentcubes .cube-items-wrapper .cube-content-wrapper .item-title a.item-link {\n    display: block;\n    color: #020202;\n}\n\na {\n    color: #020202;\n    transition: all 0.2s;\n}", extra: {  }, priority: '0', name: portfolio }
        - { location: '', inline: ".ui-tabs-active .g-contenttabs-tab-wrapper-head {\n    background: #020202;\n}\n\n.st-title h1{\n     text-align: center;\n    font-size: 4rem;\n    margin: 0;\n    padding: 0;\n    font-family: Helvetica;\n}", extra: {  }, priority: '0', name: skills }
      javascript:
        - { location: '', inline: "window.addEventListener('load', () => {\n    const introText = document.getElementById('introText');\n    const scrollText = document.getElementById('scrollText');\n    const outroText = document.getElementById('outroText');\n\n    // Initial animations\n    introText.classList.add('fade-in');\n    scrollText.style.left = '0%';\n    outroText.style.transform = 'translateY(0)';\n    outroText.style.opacity = '1';\n\n    window.addEventListener('scroll', () => {\n        const scrollPosition = window.scrollY;\n        const windowHeight = window.innerHeight;\n        \n        // Trigger reverse animations when scrolling down\n        if (scrollPosition >= windowHeight / 2) {\n            introText.style.opacity = '0';\n            scrollText.style.left = '-100%';\n            outroText.style.transform = 'translateY(100%)';\n            outroText.style.opacity = '0';\n        } else {\n            introText.style.opacity = '1';\n            scrollText.style.left = '0%';\n            outroText.style.transform = 'translateY(0)';\n            outroText.style.opacity = '1';\n        }\n    });\n});\n", in_footer: '0', extra: {  }, priority: '0', name: animation }
        - { location: '', inline: "document.addEventListener('DOMContentLoaded', () => {\n    const fpIntro = document.querySelector('.fp-intro');\n    \n    function checkScroll() {\n        const rect = fpIntro.getBoundingClientRect();\n        const windowHeight = window.innerHeight;\n\n        // Check if the element is within the viewport\n        if (rect.top < windowHeight && rect.bottom >= 0) {\n            fpIntro.classList.add('in-view');\n            fpIntro.classList.remove('outro');\n        } else {\n            fpIntro.classList.remove('in-view');\n            fpIntro.classList.add('outro');\n        }\n    }\n\n    window.addEventListener('scroll', checkScroll);\n    checkScroll(); // Initial check\n});\n", in_footer: '0', extra: {  }, priority: '0', name: intro }
        - { location: '', inline: "document.addEventListener('DOMContentLoaded', () => {\n    const title = document.querySelector('.ut-title');\n    const experience = document.querySelector('.experience');\n\n    const handleScroll = () => {\n        const titlePosition = title.getBoundingClientRect();\n        const experiencePosition = experience.getBoundingClientRect();\n        const windowHeight = window.innerHeight;\n\n        // Check if title is in view\n        if (titlePosition.top <= windowHeight && titlePosition.bottom >= 0) {\n            title.classList.add('visible');\n            title.classList.remove('hidden');\n        } else {\n            title.classList.add('hidden');\n            title.classList.remove('visible');\n        }\n\n        // Check if experience is in view\n        if (experiencePosition.top <= windowHeight && experiencePosition.bottom >= 0) {\n            experience.classList.add('visible');\n            experience.classList.remove('hidden');\n        } else {\n            experience.classList.add('hidden');\n            experience.classList.remove('visible');\n        }\n    };\n\n    window.addEventListener('scroll', () => {\n        requestAnimationFrame(handleScroll); // Smooth scrolling animation\n    });\n\n    // Initial check in case elements are in view on load\n    handleScroll();\n});\n", in_footer: '0', extra: {  }, priority: '0', name: experience }
